apply plugin: 'java'


repositories {
    mavenCentral()
}

// most of the jar libraries is available in the /dependencies folder, not in a remote repository
dependencies {
    compile fileTree(dir: 'dependencies', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.11.0'
}

// the lines bellow deal with exporting a running jar
jar {
    manifest {
        attributes 'Main-Class': 'br.ufpe.cin.app.JFSTMerge'
    }
}

task fatJar(type: Jar, group: "Binaries", description: "Creates S3M's main binary.") {

    manifest.from jar.manifest
    classifier = 'all'
    from {
        configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

artifacts {
    archives fatJar
}

task copyBinary(type: Copy, dependsOn: assemble, group: "Binaries", description: "Copies binaries to /binary folder.") {
    from fatJar
    into "binary"
    rename "jFSTMerge.*", "jFSTMerge.jar"
}

task updateInstaller(type: Copy, dependsOn: assemble, group: "Binaries", description: "Updates installer jar.") {
    from fatJar
    into "installer"
    rename "jFSTMerge.*", "s3m.jar"
    
    doLast {
        ant.jar(update: "true", destfile: "installer/s3mInstaller.jar") {
            zipfileset(file: "installer/s3m.jar")
        }
        
        delete "installer/s3m.jar"
    }
}
build.finalizedBy(copyBinary, updateInstaller)